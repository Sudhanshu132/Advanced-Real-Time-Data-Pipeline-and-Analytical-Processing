exit()
df = spark.read.option("header", "true").csv("file:///home/spark/Smart_Farming_Crop_Yield_2024.csv")
df.printSchema
df.ddl
df.schema
df.schema.toDDL
df.s
 df.schema.toDDL()
df.schema.toDDL()
df = spark.createDataFrame([{"first": "john", "last": "parker" }], StructType([StructField("first", StringType()), StructField("last", StringType()), StructField("age", StringType())]))
from pyspark.sql.types import StructType, StructField, StringType, IntegerType
df = spark.createDataFrame([{"first": "john", "last": "parker", "age": }], StructType([StructField("first", StringType()), StructField("last", StringType()), StructField("age", StringType())]))
df = spark.createDataFrame([{"first": "john", "last": "parker", "age":  "21"}], StructType([StructField("first", StringType()), StructField("last", StringType()), StructField("age", StringType())]))
df.printSchema
df.write.option("header", "true").csv("file:///home/spark/sample")
df = spark.read.option("header", "true").csv("file:///home/spark/sample")
df.printSchema
jsonFormatSchema = open("/tmp/test.avsc", "r").read()
jsonFormatSchema = open("file:///home/spark/sample.avsc", "r").read()
jsonFormatSchema = open("/home/spark/sample.avsc", "r").read()
jsonFormatSchema
df = spark.read.option("header", "true").option("avroSchema", jsonFormatSchema).csv("file:///home/spark/sample")
df.printSchema
from pyspark.sql import SparkSession
from pyspark.sql.types import StructType
import json
with open("/home/spark/sample.json", "r") as f:
    schema_json = json.load(f)
	
schema = StructType.fromJson(schema_json)
with open("/home/spark/sample.json", "r") as f:
    schema_json = json.load(f)
schema = StructType.fromJson(schema_json)
with open("/home/spark/sample.json", "r") as f:
    schema_json = json.load(f)
schema = StructType.fromJson(schema_json)
schema
df = spark.read.option("header", "true").schema(schema).csv("file:///home/spark/sample.csv")
df = spark.read.option("header", "true").schema(schema).csv("file://home/spark/sample.csv")
df = spark.read.option("header", "true").schema(schema).csv("file:///home/spark/sample")
df.printSchema
age: int
import json
df = spark.read.option("header", "true").csv("file:///home/spark/Smart_Farming_Crop_Yield_2024.csv")
schema_json = df.schema.jsonValue()
# Pretty-print JSON
pretty_schema = json.dumps(schema_json, indent=4)
print(pretty_schema)
exit()
