services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data --console-address ":9090"
    # volumes:
    #   - ./volumes/minio:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - farming_net

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    # volumes:
    #   - ./volumes/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_PASSWORD}"]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - farming_net

  spark:
    image: sdp-spark:1.0.0
    container_name: spark
    volumes:
      - ./code:/home/spark
    depends_on:
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      BUCKET_NAME: ${BUCKET_NAME}
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      TRIGGER_INTERVAL_SEC: ${TRIGGER_INTERVAL_SEC}
    ports:
      - "4040:4040"
    entrypoint: ["/bin/bash", "-c", "sleep infinity"]
    restart: unless-stopped
    networks:
      - farming_net

# ---------------------
# Persistent Volumes
# ---------------------
# volumes:
  # minio_data: ./volumes/minio
  # postgres_data: ./volumes/postgres
  # spark_data: ./volumes/spark

# ---------------------
# Private Network
# ---------------------
networks:
  farming_net:
    driver: bridge
